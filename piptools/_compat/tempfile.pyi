from contextlib import AbstractContextManager
from types import TracebackType
from typing import *

class TemporaryDirectory(AbstractContextManager[str]):
    _closed: bool
    name: Optional[str]
    def __init__(
        self, suffix: str = "", prefix: str = "tmp", dir: Optional[str] = None
    ) -> None: ...
    def __repr__(self) -> str: ...
    def __enter__(self) -> str: ...
    def __exit__(
        self,
        exc_type: Optional[Type[BaseException]],
        exc_val: Optional[BaseException],
        exc_tb: Optional[TracebackType],
    ) -> bool: ...
    def __del__(self) -> None: ...
    def cleanup(self) -> None: ...
    def _rmtree(self, path: str) -> None: ...
